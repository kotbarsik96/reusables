{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  /*===================== JAVASCRIPT/TYPESCRIPT =====================*/
  "Console log": {
    "scope": "javascript,typescript",
    "prefix": "clog",
    "body": "console.log($1);"
  },
  "Try/Catch": {
    "scope": "javascript,typescript",
    "prefix": "trycatch",
    "body": "try {\n\t$1\n} catch(e) {\n\tconsole.error(e)\n}"
  },
  "Create function": {
		"scope": "javascript,typescript",
		"prefix": "funct",
		"body": "function $1(){\n\n}"
	},
	"Document QuerySelector": {
		"scope": "javascript,typescript",
		"prefix": "docq",
		"body": "document.querySelector($1)"
	},
	"Document Query-Selector All": {
		"scope": "javascript,typescript",
		"prefix": "docqa",
		"body": "document.querySelectorAll($1)"
	},
  "Export default interface": {
    "scope": "typescript",
    "prefix": "expdefint",
    "body": "export default interface I"
  },
  /*===================== VUE =====================*/
  "Define props": {
    "scope": "vue,javascript,typescript",
    "prefix": "defprops",
    "body": [
      "const props = defineProps<{",
      "\t$1",
      "}>()"
    ]
  },
  "Define emits": {
    "scope": "vue,javascript,typescript",
    "prefix": "defemits",
    "body": [
      "const emit = defineEmits<{",
      "\t(e: $1): void;",
      "}>()"
    ]
  },
  "Vue template": {
    "scope": "vue",
    "prefix": "vuetemplate",
    "body": [
      "<template>",
      "",
      "</template>",
      "",
      "<script setup lang=\"ts\">",
      "",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      "",
      "</style>"
    ]
  },
  /*===================== CSS =====================*/
  "Flex direction: column": {
    "scope": "css,scss",
    "prefix": "fdc",
    "body": "flex-direction: column;"
  },
  "Flex direction: row": {
    "scope": "css,scss",
    "prefix": "fdr",
    "body": "flex-direction: row;"
  },
  "Include adaptive": {
    "scope": "scss",
    "prefix": "incad",
    "body": "@include adaptive($1){}"
  },
  "Flex-wrap: wrap": {
    "scope": "css,scss",
    "prefix": "fw",
    "body": "flex-wrap: wrap;"
  },
  "Media: max-width": {
    "scope": "css,scss",
    "prefix": "mdmx",
    "body": "@media (max-width: $1px){$2}"
  },
  "Media: min-width": {
    "scope": "css,scss",
    "prefix": "mdmn",
    "body": "@media (min-width: $1px){$2}"
  },
  "@include breakpoint.xxx()": {
    "scope": "css,scss",
    "prefix": "incbreak",
    "body": "@include breakpoints.$1{}"
  },
  /*===================== PHP =====================*/
  "Laravel Log": {
    "scope": "php",
    "prefix": "laralog",
    "body": "\\Illuminate\\Support\\Facades\\Log::info($1);"
  },
  "Public function": {
    "scope": "php",
    "prefix": "pubf",
    "body": [
      "public function $1()",
      "{",
      "\t",
      "}"
    ]
  },
  "Public static function": {
    "scope": "php",
    "prefix": "pubstf",
    "body": [
      "public static function $1()",
      "{",
      "\t",
      "}"
    ]
  }
}